// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AddCommentRequest struct {
	PostID    string `json:"postID"`
	Comment   string `json:"comment"`
	CreatedBy string `json:"createdBy"`
}

type Comment struct {
	ID        string `json:"id"`
	PostID    string `json:"postID"`
	Comment   string `json:"comment"`
	CreatedBy string `json:"createdBy"`
	Event     string `json:"event"`
}

type CommentsWithProfileIds struct {
	Comments  []*Comment   `json:"comments"`
	UserIDMap []*UserIDMap `json:"userIdMap"`
}

type CreatePostRequest struct {
	Username    string `json:"username"`
	Description string `json:"description"`
	Data        string `json:"data"`
}

type EditPostRequest struct {
	ID             string   `json:"id"`
	NewDescription string   `json:"newDescription"`
	LikedBy        []string `json:"likedBy"`
}

type File struct {
	Name        string `json:"name"`
	Content     string `json:"content"`
	ContentType string `json:"contentType"`
}

type LikePostRequest struct {
	ID          string   `json:"id"`
	Description string   `json:"description"`
	NewLikedBy  []string `json:"newLikedBy"`
	PostOwner   string   `json:"postOwner"`
	Liked       bool     `json:"liked"`
	LikedBy     string   `json:"likedBy"`
}

type Post struct {
	ID          string   `json:"id"`
	Description string   `json:"description"`
	Data        *File    `json:"data"`
	Username    string   `json:"username"`
	LikedBy     []string `json:"likedBy"`
	Comments    []string `json:"comments"`
}

type RemovePostRequest struct {
	ID     string `json:"id"`
	FileID string `json:"fileID"`
}

type UserIDMap struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
